
for _, cc in toolsets('cc.*') do
    local cc = cc:inherit {
        warning_level = 0;
    };

    local library = cc:StaticLibrary '${lib}/UnitTest++_${platform}_${architecture}' {
        cc:Cxx '${obj}/%1' {
            'RequiredCheckException.cpp',
            'RequiredCheckTestReporter.cpp',
            'CompositeTestReporter.cpp',
            'Checks.cpp',
            'TestReporter.cpp',
            'Test.cpp',
            'TestRunner.cpp',
            'ThrowingTestReporter.cpp',
            'XmlTestReporter.cpp',
            'TestList.cpp',
            'DeferredTestReporter.cpp',
            'DeferredTestResult.cpp',
            'CurrentTest.cpp',
            'TestDetails.cpp',
            'ReportAssert.cpp',
            'TimeConstraint.cpp',
            'TestResults.cpp',
            'MemoryOutStream.cpp',
            'AssertException.cpp',
            'TestReporterStdout.cpp'
        };    
    };

    if cc:platform_matches('windows') then
        library {
            cc:Cxx '${obj}/%1' {
                'Win32/TimeHelpers.cpp'
            };
        };
    elseif cc:platform_matches('macos') or cc:platform_matches('linux') then
        library {
            cc:Cxx '${obj}/%1' {
                'Posix/SignalTranslator.cpp',
                'Posix/TimeHelpers.cpp'
            };
        };
    end
end
